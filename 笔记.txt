aar或jar包上传到远程github仓库：
1、在github上创建一个远程仓库
2、在项目library的build.gradle 文件中编辑如下代码：
//////// 打包发布配置开始 ////////
apply plugin: 'maven'
ext {
    //项目的本地地址
    GITHUB_REPO_PATH = "E:/master/Application"       //这里指定的就是刚刚新建项目后在本地的路径
    PUBLISH_GROUP_ID = 'com.jushi'
    PUBLISH_ARTIFACT_ID = 'pictures_lib'
    PUBLISH_VERSION = '1.0.0'
}
uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.GITHUB_REPO_PATH)
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}

// 源代码一起打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
}
//////// 打包发布配置结束 ////////

3、在terminal中执行命令：
gradlew uploadArchives

之后将项目push到github仓库

4、使用：
     a、在根目录的build.gradle文件中添加

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://raw.githubusercontent.com/JuShiDeveloper/PictureTool/master" }
    }
}

maven { url "https://raw.githubusercontent.com/github账户名/项目在github上的仓库名称/master" }

b、在主工程build.gradle中使用：
implementation 'com.jushi:pictures_lib:1.0.0'